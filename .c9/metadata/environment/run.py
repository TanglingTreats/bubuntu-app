{"changed":true,"filter":false,"title":"run.py","tooltip":"/run.py","value":"from flask import Flask, render_template, request, redirect\nimport os, psycopg2\n\nDATABASE_URL = os.environ['DATABASE_URL']\n\n#print(conn.get_dsn_parameters(),\"\\n\")\n\nconn = psycopg2.connect(DATABASE_URL, sslmode=\"require\")\nmycursor = conn.cursor()\n \napp = Flask(__name__)\n\napp.secret_key = os.getenv(\"SECRET\", \"secretkey123\")\n\nmessages = []\nusers = []\n\nisUserIn = False\n\n@app.route(\"/\")\ndef index():\n    return render_template(\"index.html\")\n    \n@app.route(\"/messages\")\ndef message():\n    messages.clear()\n    users.clear()\n    \n    sql = \"\"\"SELECT users.username AS user, \n    message.msg_content AS content \n    FROM users \n    INNER JOIN message ON message.usr_id = users.usr_id\"\"\"\n    \n    mycursor.execute(sql)\n\n    res = mycursor.fetchall()\n    for x in res:\n        post = {\n            \"username\": x[0],\n            \"message\":x[1]\n        }\n        messages.append(post)\n        \n    sql = \"SELECT DISTINCT usr_id, username FROM users\"\n    mycursor.execute(sql)\n    \n    res = mycursor.fetchall()\n    for x in res:\n        user = {\n            \"user_id\": x[0],\n            \"username\": x[1]\n        }\n        users.append(user)\n    return render_template(\"chat.html\", messages=messages)\n    \n@app.route(\"/messages\", methods=[\"POST\"])\ndef get_message():\n    global isUserIn\n    \n    username = request.form.get(\"username\")\n    msg = request.form.get(\"message\")\n    \n    if username != '' and msg != '':\n        for i in users:\n            if i['username'] == username:\n                isUserIn = True\n                break\n            else:\n                isUserIn = False\n                \n        if(isUserIn):\n            #If user is in record, use user_id to store message with id\n            user_id = i['user_id']\n            execute_query(user_id, msg)\n            \n        else:\n            #else create a new record for user and store user_id in both tables\n            #query for highest user_id, then add 1 to store as new user_id\n            query=\"SELECT MAX(usr_id) FROM users\"\n            mycursor.execute(query)\n            res = mycursor.fetchall()\n                \n            if(res[0][0] is None):\n                new_user_id = 1\n            else:\n                new_user_id = res[0][0]+1\n                \n            val = (new_user_id, username)\n            query = \"INSERT INTO users(usr_id, username) VALUES(%s, %s)\"\n            mycursor.execute(query, val)\n            \n            execute_query(new_user_id, msg)\n        \n    return redirect(\"/messages\")\n    \ndef execute_query(user_id, msg):\n    query=\"SELECT MAX(msg_id) FROM message\"\n    mycursor.execute(query)\n    res = mycursor.fetchall()\n    if(res[0][0] is None):\n        msg_id = 1\n    else:\n        msg_id = res[0][0]+1\n    val = (msg_id, msg, user_id)\n    \n    \n    query = \"\"\"INSERT INTO message(msg_id, msg_content, usr_id) \n                VALUES(%s, %s, %s)\"\"\"\n    mycursor.execute(query, val)\n    conn.commit()\n\n    \nif __name__ == \"__main__\":\n    app.run(host=os.environ.get(\"IP\", \"0.0.0.0\"),\n            port=int(os.environ.get(\"PORT\", \"5000\")),\n            debug=False)","undoManager":{"mark":16,"position":17,"stack":[[{"start":{"row":115,"column":18},"end":{"row":115,"column":23},"action":"remove","lines":["False"],"id":1634},{"start":{"row":115,"column":18},"end":{"row":115,"column":19},"action":"insert","lines":["T"]},{"start":{"row":115,"column":19},"end":{"row":115,"column":20},"action":"insert","lines":["r"]},{"start":{"row":115,"column":20},"end":{"row":115,"column":21},"action":"insert","lines":["u"]},{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"insert","lines":["e"]}],[{"start":{"row":115,"column":23},"end":{"row":119,"column":23},"action":"insert","lines":["","if __name__ == \"__main__\":","    app.run(host=os.environ.get(\"IP\", \"0.0.0.0\"),","            port=int(os.environ.get(\"PORT\", \"5000\")),","            debug=True)"],"id":1635}],[{"start":{"row":115,"column":23},"end":{"row":116,"column":0},"action":"insert","lines":["",""],"id":1636},{"start":{"row":116,"column":0},"end":{"row":116,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":116,"column":8},"end":{"row":116,"column":12},"action":"remove","lines":["    "],"id":1637},{"start":{"row":116,"column":4},"end":{"row":116,"column":8},"action":"remove","lines":["    "]},{"start":{"row":116,"column":0},"end":{"row":116,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":116,"column":0},"end":{"row":116,"column":2},"action":"insert","lines":["''"],"id":1638}],[{"start":{"row":116,"column":2},"end":{"row":116,"column":3},"action":"insert","lines":["'"],"id":1639}],[{"start":{"row":110,"column":1},"end":{"row":110,"column":2},"action":"remove","lines":[" "],"id":1640},{"start":{"row":110,"column":0},"end":{"row":110,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":110,"column":0},"end":{"row":110,"column":2},"action":"insert","lines":["''"],"id":1641}],[{"start":{"row":110,"column":2},"end":{"row":110,"column":3},"action":"insert","lines":["'"],"id":1642}],[{"start":{"row":118,"column":39},"end":{"row":118,"column":40},"action":"remove","lines":["0"],"id":1643}],[{"start":{"row":118,"column":39},"end":{"row":118,"column":40},"action":"insert","lines":["1"],"id":1644},{"start":{"row":118,"column":40},"end":{"row":118,"column":41},"action":"insert","lines":["2"]}],[{"start":{"row":118,"column":41},"end":{"row":118,"column":42},"action":"insert","lines":["7"],"id":1645}],[{"start":{"row":118,"column":47},"end":{"row":118,"column":48},"action":"remove","lines":["0"],"id":1646}],[{"start":{"row":118,"column":47},"end":{"row":118,"column":48},"action":"insert","lines":["1"],"id":1647}],[{"start":{"row":110,"column":4},"end":{"row":110,"column":5},"action":"remove","lines":[" "],"id":1648},{"start":{"row":110,"column":3},"end":{"row":110,"column":4},"action":"remove","lines":[" "]},{"start":{"row":110,"column":2},"end":{"row":110,"column":3},"action":"remove","lines":["'"]},{"start":{"row":110,"column":1},"end":{"row":110,"column":2},"action":"remove","lines":["'"]},{"start":{"row":110,"column":0},"end":{"row":110,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":116,"column":2},"end":{"row":116,"column":3},"action":"remove","lines":["'"],"id":1650},{"start":{"row":116,"column":1},"end":{"row":116,"column":2},"action":"remove","lines":["'"]},{"start":{"row":116,"column":0},"end":{"row":116,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":115,"column":23},"end":{"row":120,"column":23},"action":"remove","lines":["","","if __name__ == \"__main__\":","    app.run(host=os.environ.get(\"IP\", \"127.0.0.1\"),","            port=int(os.environ.get(\"PORT\", \"5000\")),","            debug=True)"],"id":1651}],[{"start":{"row":115,"column":18},"end":{"row":115,"column":22},"action":"remove","lines":["True"],"id":1652},{"start":{"row":115,"column":18},"end":{"row":115,"column":19},"action":"insert","lines":["F"]},{"start":{"row":115,"column":19},"end":{"row":115,"column":20},"action":"insert","lines":["a"]},{"start":{"row":115,"column":20},"end":{"row":115,"column":21},"action":"insert","lines":["l"]},{"start":{"row":115,"column":21},"end":{"row":115,"column":22},"action":"insert","lines":["s"]},{"start":{"row":115,"column":22},"end":{"row":115,"column":23},"action":"insert","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":1520.65625,"scrollleft":0,"selection":{"start":{"row":115,"column":23},"end":{"row":115,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":99,"state":"start","mode":"ace/mode/python"}},"timestamp":1563699026133}